#--UTF-8 file--

#系统主目录，系统的所有数据都存储于此目录内，默认为：[用户主目录]/.datagear
#注意：修改此目录将会重置系统的所有数据
DATAGEAR_HOME=${user.home}/.datagear

#首页欢迎语，允许HTML语法，可以直接这里写，或者从文件读取（即改即生效），示例：
# <h1 class="text-primary">XXXXXX数据可视化平台</h1>
# file:/path0/path1/welcome.txt
welcomeContent=
#当welcomeContent是文件时的编码，默认为操作系统编码
welcomeContentEncoding=

#上传文件最大字节数
# 1073741824 1G
multipart.maxUploadSize=1073741824

#是否禁用匿名用户功能，禁用后，匿名用户将不能使用系统功能
# true 禁用
# false 不禁用
disableAnonymous=false

#是否禁用图表/看板展示操作的匿名用户访问功能
#禁用后，匿名用户将不允许访问图表/看板展示链接，即使它们已分享给匿名用户
# true 禁用
# false 不禁用
disableShowAnonymous=false

#是否禁用注册功能
# true 禁用
# false 不禁用
disableRegister=false

#是否禁用登录验证码功能，禁用后，登录页面无需填写校验码
# true 禁用
# false 不禁用
disableLoginCheckCode=false

#用户密码强度JavaScript语法正则表达式
# /\\S+/      至少1个字符
# /\\S{6,}/   至少6个字符
# /^(?=.*[a-z])(?=.*[A-Z])(?=.*[0-9])(.{6,})$/   至少6个字符，且需包含小写字母、大写字母、数字
userPasswordStrengthRegex=/\\S+/
#用户密码强度输入提示信息
userPasswordStrengthTip=

#数据源密码加密配置
#是否启用加密，修改此配置项不会影响已设置的密码
# true 启用，密码将被加密存储
# false 禁用，密码将以明文存储
dtbsSourcePsd.crypto.enabled=false
#注意：修改下面这两项配置可能会导致系统内所有已设置密码的数据源无法访问，需重新设置数据源密码！！！
#密钥，默认为"DataGear"的base64编码值
dtbsSourcePsd.crypto.secretKey=RGF0YUdlYXI=
#盐值，应仅包含0-9、a-f字符、且长度不小于8位的字符串，默认为"DataGear"的hex编码值
dtbsSourcePsd.crypto.salt=4461746147656172

#看板分享密码加密配置
#是否启用加密，修改此配置项不会影响已设置的密码
# true 启用，密码将被加密存储
# false 禁用，密码将以明文存储
dashboardSharePsd.crypto.enabled=false
#注意：修改下面这两项配置可能会导致系统内所有设置分享密码的看板在访问时校验密码失败，需登录系统重新设置所有看板分享密码！！！
#密钥，默认为"DataGear"的base64编码值
dashboardSharePsd.crypto.secretKey=RGF0YUdlYXI=
#盐值，应仅包含0-9、a-f字符、且长度不小于8位的字符串，默认为"DataGear"的hex编码值
dashboardSharePsd.crypto.salt=4461746147656172

#默认角色：注册用户
#可以是系统角色列表中的任意角色ID，多个以英文逗号（,）分隔
defaultRole.register=ROLE_DATA_ADMIN
#默认角色：管理员添加用户
#可以是系统角色列表中的任意角色ID，多个以英文逗号（,）分隔
defaultRole.add=ROLE_DATA_ADMIN
#默认角色：匿名用户
#可以是系统角色列表中的任意角色ID，多个以英文逗号（,）分隔
#在4.0.0版本中，匿名用户已通过程序逻辑禁用了ROLE_DATA_ADMIN内置角色的权限，
#因此这里设置ROLE_DATA_ADMIN将无效
defaultRole.anonymous=ROLE_DATA_ANALYST

#数据库表类型配置
#系统默认会从数据库驱动中读取和判断表类型信息，但是对于某些数据库驱动，并不能准确地处理，
#可能导致数据源无法加载数据表。出现上述情况时，可以通过在此手动配置表类型信息的方式解决。
#第一个匹配数据库名的配置将起作用。
#下面是一个配置示例，配置了Oracle、MySQL的表类型，其中：
# *.dbPattern 数据库名匹配模式，忽略大小写，星号（*）匹配任意字符
# *.tables    表类型，多个以英文逗号（,）分隔，如果留空，将从数据库驱动中读取
# *.datas     数据表（可执行SQL查询数据的表）类型，多个以英文逗号（,）分隔，如果留空，将由程序判断
# *.entities  实体表（可执行SQL查询、存储数据的表）类型，多个以英文逗号（,）分隔，如果留空，将由程序判断
#dbmeta.tabletypes[0].dbPattern=*oracle*
#dbmeta.tabletypes[0].tables=TABLE, VIEW, ALIAS, SYNONYM
#dbmeta.tabletypes[0].datas=TABLE, VIEW
#dbmeta.tabletypes[0].entities=TABLE
#dbmeta.tabletypes[1].dbPattern=*mysql*
#dbmeta.tabletypes[1].tables=
#dbmeta.tabletypes[1].datas=TABLE, VIEW
#dbmeta.tabletypes[1].entities=TABLE

#SQL防注入配置，配置SQL中不允许使用的非法关键字
#SQL字符串（'...'）、引用标识符（比如MySQL的`...`，Postgres的"..."）不会进行防注入校验
#下面的*.default是各功能的全局配置，也可以自己添加针对特定数据库的配置（数据库名或者URL前缀），例如：
# dsmanager.query.invalidsqlkeywords.mysql=...
# dsmanager.imptsql.invalidsqlkeywords.postgres=...
# dsmanager.sqlpad.read.invalidsqlkeywords.oracle=...
# sqldataset.invalidsqlkeywords.[jdbc\:sqlserver]=...
#数据源管理-查询、数据导出
dsmanager.query.invalidsqlkeywords.default=INSERT,UPDATE,DELETE,TRUNCATE,CREATE,ALTER,DROP
#数据源管理-数据导入-导入SQL
dsmanager.imptsql.invalidsqlkeywords.default=SELECT,DELETE,TRUNCATE,DROP
#数据源管理-SQL工作台-读权限用户
dsmanager.sqlpad.read.invalidsqlkeywords.default=INSERT,UPDATE,DELETE,TRUNCATE,CREATE,ALTER,DROP
#数据源管理-SQL工作台-写权限用户
dsmanager.sqlpad.edit.invalidsqlkeywords.default=DELETE,TRUNCATE,CREATE,ALTER,DROP
#数据源管理-SQL工作台-删除权限用户
dsmanager.sqlpad.delete.invalidsqlkeywords.default=
#SQL数据集
sqldataset.invalidsqlkeywords.default=INSERT,UPDATE,DELETE,TRUNCATE,CREATE,ALTER,DROP

#校验码配置
#字体名称，多个以英文逗号（,）分隔，留空表示自动查找
checkcode.fontNames=
#字体类型：0 PLAIN；1 BOLD；2 ITALIC
checkcode.fontStyle=1
#字体尺寸
checkcode.fontSize=16
#图片宽度，小于0表示自动计算
checkcode.imageWidth=-1
#图片高度，小于0表示自动计算
checkcode.imageHeight=-1
#校验码X坐标，小于0表示自动计算
checkcode.codeLeft=-1
#校验码Y坐标，小于0表示自动计算
checkcode.codeTop=-1
#图片类型
checkcode.imageFormatName=png

#清理临时目录
#执行清理时间间隔
cleanTempDirectory.interval=0 0 1 * * ?

#日志级别
# ERROR
# WARN
# INFO
# DEBUG
# TRACE
logging.level.org.datagear=INFO

#日志存储路径
#DG_APP_HOME已在startup.sh、startup.bat启动脚本中定义为环境变量
logging.file.name=${DG_APP_HOME}/logs/datagear.log

#服务端口号
server.port=50401

#自定义会话过期时长，比如：
# 30m 过期时长为30分钟
# 60m 过期时长为60分钟
server.servlet.session.timeout=

#自定义应用根路径，比如：
# /datagear
# /app/datagear
#当希望程序运行在二级目录下时，可以设置此项
server.servlet.context-path=
